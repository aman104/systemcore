<?php

/**
 * Mailing
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    SystemCore
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Mailing extends BaseMailing
{
	public function save(Doctrine_Connection $conn = null)
	{
		if($this->isNew())
		{
			$this->setHash(Tools::genUniqueHash(8));
		}
		return parent::save($conn);
	}	

	public function clearMailingList()
	{
		$q = Doctrine_Query::create()
			->from('Mailing2MailingList')
			->where('mailing_id =?', $this->getPrimaryKey())
			->delete();
		return $q->execute();
	}

	public function run()
	{
		if($this->getStatus() == 1)
		{
			$this->setStatus(2);
			$this->setTimeStart(date('Y-m-d: H:i:s', time()));

			$points = $this->setEmailsGroup();
			$this->publishHtml();

			$this->getUser()->takePoints($points);

			$this->save();
		}
			
	}

	public function test()
	{
		$title = $this->getTitle();

		$content = $this->getHtml();
		$content = $this->prepareHtml($content);
		$content = str_replace('{open_link}', '', $content);

		$from = array('name' => $this->getNameFrom(), 'email' => $this->getEmailFrom());

		$user = $this->getUser();
		$emails = $user->getUserTestEmail();

		if(count($emails) > 0)
		{
			foreach($emails as $email)
			{
			 	$to = $email->getEmail();		
			 	Tools::sendEmail($to, $title, $content, $from);	
			}	
			return true;
		}
		else
		{
			return false;
		}
						
	}

	private function setEmailsGroup()
	{
		$lists = $this->getMailingLists();
		$ids = array();
		foreach($lists as $list)
		{
			$ids = array_merge($ids, $list->getVeryfiedEmailIds());			
		}

		$this->link('MailingEmails', $ids);

		return count($ids);

	}

	private function publishHtml()
	{

		$html = $this->getHtml();
		$html = $this->generateLinks($html);
		$html = $this->prepareHtml($html);

		$this->setPublic($html);
	}

	private function generateLinks($html)
	{
		$urls = array();
	  	$regexp = "<a\s[^>]*href=(\"??)([^\" >]*?)\\1[^>]*>(.*)<\/a>";	
	    if(preg_match_all("/$regexp/siU", $html, $matches, PREG_SET_ORDER)) 
	    {
		    foreach($matches as $match) 
		    {
		      if($match[2] != '#')
		      {
		      	$urls[$match[2]] = $match[2];		      	
		      }		      
		    }
	    }	  
	    return $this->setLinks($urls, $html);
	}

	private function setLinks($urls, $html)
	{
		foreach($urls as $url)
		{
			$new = new MailingLink();
			$new->setMailingId($this->getPrimaryKey());
			$new->setSource($url);
			$link = md5($url.$this->getPrimaryKey());
			$new->setLink($link);
			$new->save();

			$html = str_replace('href="'.$url.'"', 'href="http://api.sendmail24.pl/link/'.$link.'"', $html);

		}
		return $html;
	}

	public function prepareHtml($html)
	{

		$html = str_replace('{preview_link}', $this->getPreviewLink(), $html);

		$content = '<html>';
		$content .= '<head>';
		$content .= '<meta charset="utf-8" />';
		$content .= '<style>';
		$content .= $this->getCss();
		$content .= '</style>';
		$content .= '</head>';
		$content .= '<body class="main-page">';
		$content .= $html;
		$content .= '{open_link}';
		$content .= '</body>';
		$content .= '</html>';

		return $content;
	}

	public function getPreviewLink()
	{
		return '<a href="http://api.sendmail24.pl/preview/'.$this->getHash().'">kliknij tutaj</a>';
	}

	public function getDeleteLink($email)
	{
		return '<a href="http://api.sendmail24.pl/delete/email/'.$this->getHash().'?email='.urlencode($email).'">kliknij tutaj</a>';
	}

	public function sendEmails()
	{
		$baseHtml = $this->getPublic();

		$emails = $this->getMailingEmails();
		$from = array('name' => $this->getNameFrom(), 'email' => $this->getEmailFrom());
		foreach($emails as $emailObj)
		{
			$to = $emailObj->getEmail();
			$m2e = $emailObj->getMailing2Email();
			$m2e[0]->setStatus(2)->save();
			$html = str_replace('{delete_link}', $this->getDeleteLink($to), $baseHtml);
			$html = str_replace('{open_link}', '<img src="'.$this->getOpenLink($to).'" style="width: 1px height: 1px; background: none;" />', $html);
			//$html = str_replace('{person}', $emailObj->getPerson(), $html);
			Tools::sendEmail($to, $this->getTitle(), $html, $from, $this->getText());	
		}

		$this->setStatus(3);
		$this->setTimeEnd(date('Y-m-d H:i:s', time()));
		$this->save();

	}

	public function getOpenLink($email)
	{
		return 'http://api.sendmail24.pl/open/'.$this->getHash().'?email='.urlencode($email);
	}

}
