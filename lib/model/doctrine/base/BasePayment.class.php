<?php

/**
 * BasePayment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $hash
 * @property integer $points
 * @property integer $price
 * @property string $symbol
 * @property integer $status
 * @property integer $invoice_id
 * @property User $User
 * 
 * @method integer getUserId()     Returns the current record's "user_id" value
 * @method string  getHash()       Returns the current record's "hash" value
 * @method integer getPoints()     Returns the current record's "points" value
 * @method integer getPrice()      Returns the current record's "price" value
 * @method string  getSymbol()     Returns the current record's "symbol" value
 * @method integer getStatus()     Returns the current record's "status" value
 * @method integer getInvoiceId()  Returns the current record's "invoice_id" value
 * @method User    getUser()       Returns the current record's "User" value
 * @method Payment setUserId()     Sets the current record's "user_id" value
 * @method Payment setHash()       Sets the current record's "hash" value
 * @method Payment setPoints()     Sets the current record's "points" value
 * @method Payment setPrice()      Sets the current record's "price" value
 * @method Payment setSymbol()     Sets the current record's "symbol" value
 * @method Payment setStatus()     Sets the current record's "status" value
 * @method Payment setInvoiceId()  Sets the current record's "invoice_id" value
 * @method Payment setUser()       Sets the current record's "User" value
 * 
 * @package    SystemCore
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePayment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('payment');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('hash', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('points', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('price', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('symbol', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'PLN',
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('invoice_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}