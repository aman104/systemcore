<?php

/**
 * BaseMailing
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $title
 * @property text $html
 * @property text $text
 * @property text $public
 * @property string $name_from
 * @property string $email_from
 * @property text $settings
 * @property text $css
 * @property integer $status
 * @property string $hash
 * @property timestamp $time_start
 * @property timestamp $time_end
 * @property boolean $is_deleted
 * @property User $User
 * @property Doctrine_Collection $MailingLists
 * @property Doctrine_Collection $MailingEmails
 * @property Doctrine_Collection $MailingLinks
 * @property Doctrine_Collection $Mailing2Email
 * @property Doctrine_Collection $Mailing2MailingList
 * 
 * @method integer             getUserId()              Returns the current record's "user_id" value
 * @method string              getTitle()               Returns the current record's "title" value
 * @method text                getHtml()                Returns the current record's "html" value
 * @method text                getText()                Returns the current record's "text" value
 * @method text                getPublic()              Returns the current record's "public" value
 * @method string              getNameFrom()            Returns the current record's "name_from" value
 * @method string              getEmailFrom()           Returns the current record's "email_from" value
 * @method text                getSettings()            Returns the current record's "settings" value
 * @method text                getCss()                 Returns the current record's "css" value
 * @method integer             getStatus()              Returns the current record's "status" value
 * @method string              getHash()                Returns the current record's "hash" value
 * @method timestamp           getTimeStart()           Returns the current record's "time_start" value
 * @method timestamp           getTimeEnd()             Returns the current record's "time_end" value
 * @method boolean             getIsDeleted()           Returns the current record's "is_deleted" value
 * @method User                getUser()                Returns the current record's "User" value
 * @method Doctrine_Collection getMailingLists()        Returns the current record's "MailingLists" collection
 * @method Doctrine_Collection getMailingEmails()       Returns the current record's "MailingEmails" collection
 * @method Doctrine_Collection getMailingLinks()        Returns the current record's "MailingLinks" collection
 * @method Doctrine_Collection getMailing2Email()       Returns the current record's "Mailing2Email" collection
 * @method Doctrine_Collection getMailing2MailingList() Returns the current record's "Mailing2MailingList" collection
 * @method Mailing             setUserId()              Sets the current record's "user_id" value
 * @method Mailing             setTitle()               Sets the current record's "title" value
 * @method Mailing             setHtml()                Sets the current record's "html" value
 * @method Mailing             setText()                Sets the current record's "text" value
 * @method Mailing             setPublic()              Sets the current record's "public" value
 * @method Mailing             setNameFrom()            Sets the current record's "name_from" value
 * @method Mailing             setEmailFrom()           Sets the current record's "email_from" value
 * @method Mailing             setSettings()            Sets the current record's "settings" value
 * @method Mailing             setCss()                 Sets the current record's "css" value
 * @method Mailing             setStatus()              Sets the current record's "status" value
 * @method Mailing             setHash()                Sets the current record's "hash" value
 * @method Mailing             setTimeStart()           Sets the current record's "time_start" value
 * @method Mailing             setTimeEnd()             Sets the current record's "time_end" value
 * @method Mailing             setIsDeleted()           Sets the current record's "is_deleted" value
 * @method Mailing             setUser()                Sets the current record's "User" value
 * @method Mailing             setMailingLists()        Sets the current record's "MailingLists" collection
 * @method Mailing             setMailingEmails()       Sets the current record's "MailingEmails" collection
 * @method Mailing             setMailingLinks()        Sets the current record's "MailingLinks" collection
 * @method Mailing             setMailing2Email()       Sets the current record's "Mailing2Email" collection
 * @method Mailing             setMailing2MailingList() Sets the current record's "Mailing2MailingList" collection
 * 
 * @package    SystemCore
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMailing extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mailing');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('html', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('text', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('public', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('name_from', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email_from', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('settings', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('css', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('status', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('hash', 'string', 8, array(
             'type' => 'string',
             'notnull' => false,
             'unique' => true,
             'length' => 8,
             ));
        $this->hasColumn('time_start', 'timestamp', null, array(
             'type' => 'timestamp',
             'format' => 'Y-m-d H:i:s',
             'notnull' => false,
             ));
        $this->hasColumn('time_end', 'timestamp', null, array(
             'type' => 'timestamp',
             'format' => 'Y-m-d H:i:s',
             'notnull' => false,
             ));
        $this->hasColumn('is_deleted', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('MailingList as MailingLists', array(
             'refClass' => 'Mailing2MailingList',
             'local' => 'mailing_id',
             'foreign' => 'mailing_list_id'));

        $this->hasMany('Email as MailingEmails', array(
             'refClass' => 'Mailing2Email',
             'local' => 'mailing_id',
             'foreign' => 'email_id'));

        $this->hasMany('MailingLink as MailingLinks', array(
             'local' => 'id',
             'foreign' => 'mailing_id'));

        $this->hasMany('Mailing2Email', array(
             'local' => 'id',
             'foreign' => 'mailing_id'));

        $this->hasMany('Mailing2MailingList', array(
             'local' => 'id',
             'foreign' => 'mailing_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}