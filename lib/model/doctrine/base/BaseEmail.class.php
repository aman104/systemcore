<?php

/**
 * BaseEmail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $email
 * @property Doctrine_Collection $MailingLists
 * @property Doctrine_Collection $Mailings
 * @property Doctrine_Collection $MailingList2Email
 * @property Doctrine_Collection $Mailing2Email
 * 
 * @method string              getEmail()             Returns the current record's "email" value
 * @method Doctrine_Collection getMailingLists()      Returns the current record's "MailingLists" collection
 * @method Doctrine_Collection getMailings()          Returns the current record's "Mailings" collection
 * @method Doctrine_Collection getMailingList2Email() Returns the current record's "MailingList2Email" collection
 * @method Doctrine_Collection getMailing2Email()     Returns the current record's "Mailing2Email" collection
 * @method Email               setEmail()             Sets the current record's "email" value
 * @method Email               setMailingLists()      Sets the current record's "MailingLists" collection
 * @method Email               setMailings()          Sets the current record's "Mailings" collection
 * @method Email               setMailingList2Email() Sets the current record's "MailingList2Email" collection
 * @method Email               setMailing2Email()     Sets the current record's "Mailing2Email" collection
 * 
 * @package    SystemCore
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('email');
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MailingList2Email as MailingLists', array(
             'local' => 'id',
             'foreign' => 'mailing_list_id'));

        $this->hasMany('Mailing as Mailings', array(
             'refClass' => 'Mailing2Email',
             'local' => 'email_id',
             'foreign' => 'mailing_id'));

        $this->hasMany('MailingList2Email', array(
             'local' => 'id',
             'foreign' => 'email_id'));

        $this->hasMany('Mailing2Email', array(
             'local' => 'id',
             'foreign' => 'email_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}